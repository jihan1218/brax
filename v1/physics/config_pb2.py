# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: brax/physics/config.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x62rax/physics/config.proto\x12\x04\x62rax\"*\n\x07Vector3\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\"W\n\x06\x46rozen\x12\x1f\n\x08position\x18\x01 \x01(\x0b\x32\r.brax.Vector3\x12\x1f\n\x08rotation\x18\x02 \x01(\x0b\x32\r.brax.Vector3\x12\x0b\n\x03\x61ll\x18\x03 \x01(\x08\"\x83\x01\n\x04\x42ody\x12\x0c\n\x04name\x18\x01 \x01(\t\x12!\n\tcolliders\x18\x02 \x03(\x0b\x32\x0e.brax.Collider\x12\x1e\n\x07inertia\x18\x03 \x01(\x0b\x32\r.brax.Vector3\x12\x0c\n\x04mass\x18\x04 \x01(\x02\x12\x1c\n\x06\x66rozen\x18\x05 \x01(\x0b\x32\x0c.brax.Frozen\"\x95\x06\n\x08\x43ollider\x12)\n\x08material\x18\x08 \x01(\x0b\x32\x17.brax.Collider.Material\x12\x1f\n\x08position\x18\x01 \x01(\x0b\x32\r.brax.Vector3\x12\x1f\n\x08rotation\x18\x02 \x01(\x0b\x32\r.brax.Vector3\x12!\n\x03\x62ox\x18\x03 \x01(\x0b\x32\x12.brax.Collider.BoxH\x00\x12%\n\x05plane\x18\x04 \x01(\x0b\x32\x14.brax.Collider.PlaneH\x00\x12\'\n\x06sphere\x18\x05 \x01(\x0b\x32\x15.brax.Collider.SphereH\x00\x12)\n\x07\x63\x61psule\x18\x06 \x01(\x0b\x32\x16.brax.Collider.CapsuleH\x00\x12-\n\theightMap\x18\x07 \x01(\x0b\x32\x18.brax.Collider.HeightMapH\x00\x12#\n\x04mesh\x18\t \x01(\x0b\x32\x13.brax.Collider.MeshH\x00\x12\x34\n\rclipped_plane\x18\r \x01(\x0b\x32\x1b.brax.Collider.ClippedPlaneH\x00\x12\r\n\x05\x63olor\x18\n \x01(\t\x12\x0e\n\x06hidden\x18\x0b \x01(\x08\x12\x12\n\nno_contact\x18\x0c \x01(\x08\x1a\x30\n\x08Material\x12\x12\n\nelasticity\x18\x01 \x01(\x02\x12\x10\n\x08\x66riction\x18\x02 \x01(\x02\x1a&\n\x03\x42ox\x12\x1f\n\x08halfsize\x18\x01 \x01(\x0b\x32\r.brax.Vector3\x1a\x07\n\x05Plane\x1a\x36\n\x0c\x43lippedPlane\x12\x12\n\nhalfsize_x\x18\x01 \x01(\x02\x12\x12\n\nhalfsize_y\x18\x02 \x01(\x02\x1a\x18\n\x06Sphere\x12\x0e\n\x06radius\x18\x01 \x01(\x02\x1a\x36\n\x07\x43\x61psule\x12\x0e\n\x06radius\x18\x01 \x01(\x02\x12\x0e\n\x06length\x18\x02 \x01(\x02\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x05\x1a\'\n\tHeightMap\x12\x0c\n\x04size\x18\x01 \x01(\x02\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\x02\x1a#\n\x04Mesh\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05scale\x18\x02 \x01(\x02\x42\x06\n\x04type\"\xa2\x03\n\x05Joint\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tstiffness\x18\x02 \x01(\x02\x12\x0e\n\x06parent\x18\x03 \x01(\t\x12\r\n\x05\x63hild\x18\x04 \x01(\t\x12$\n\rparent_offset\x18\x05 \x01(\x0b\x32\r.brax.Vector3\x12#\n\x0c\x63hild_offset\x18\x06 \x01(\x0b\x32\r.brax.Vector3\x12\x1f\n\x08rotation\x18\x07 \x01(\x0b\x32\r.brax.Vector3\x12\x17\n\x0f\x61ngular_damping\x18\x08 \x01(\x02\x12&\n\x0b\x61ngle_limit\x18\t \x03(\x0b\x32\x11.brax.Joint.Range\x12\x1b\n\x0elimit_strength\x18\n \x01(\x02H\x00\x88\x01\x01\x12\x1b\n\x0espring_damping\x18\x0b \x01(\x02H\x01\x88\x01\x01\x12)\n\x12reference_rotation\x18\x0c \x01(\x0b\x32\r.brax.Vector3\x1a!\n\x05Range\x12\x0b\n\x03min\x18\x01 \x01(\x02\x12\x0b\n\x03max\x18\x02 \x01(\x02\x42\x11\n\x0f_limit_strengthB\x11\n\x0f_spring_damping\"\xa4\x01\n\x08\x41\x63tuator\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05joint\x18\x02 \x01(\t\x12\x10\n\x08strength\x18\x03 \x01(\x02\x12\'\n\x06torque\x18\x04 \x01(\x0b\x32\x15.brax.Actuator.TorqueH\x00\x12%\n\x05\x61ngle\x18\x05 \x01(\x0b\x32\x14.brax.Actuator.AngleH\x00\x1a\x08\n\x06Torque\x1a\x07\n\x05\x41ngleB\x06\n\x04type\"\xa6\x01\n\x05\x46orce\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x62ody\x18\x02 \x01(\t\x12\x10\n\x08strength\x18\x03 \x01(\x02\x12(\n\x08thruster\x18\x04 \x01(\x0b\x32\x14.brax.Force.ThrusterH\x00\x12&\n\x07twister\x18\x05 \x01(\x0b\x32\x13.brax.Force.TwisterH\x00\x1a\n\n\x08Thruster\x1a\t\n\x07TwisterB\x06\n\x04type\"\xa0\x02\n\x0c\x44\x65\x66\x61ultState\x12-\n\x06\x61ngles\x18\x01 \x03(\x0b\x32\x1d.brax.DefaultState.JointAngle\x12\"\n\x03qps\x18\x02 \x03(\x0b\x32\x15.brax.DefaultState.QP\x1a\x38\n\nJointAngle\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1c\n\x05\x61ngle\x18\x02 \x01(\x0b\x32\r.brax.Vector3\x1a\x82\x01\n\x02QP\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1a\n\x03pos\x18\x02 \x01(\x0b\x32\r.brax.Vector3\x12\x1a\n\x03rot\x18\x03 \x01(\x0b\x32\r.brax.Vector3\x12\x1a\n\x03vel\x18\x04 \x01(\x0b\x32\r.brax.Vector3\x12\x1a\n\x03\x61ng\x18\x05 \x01(\x0b\x32\r.brax.Vector3\"\xa6\x01\n\x0cMeshGeometry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x1f\n\x08vertices\x18\x03 \x03(\x0b\x32\r.brax.Vector3\x12\r\n\x05\x66\x61\x63\x65s\x18\x04 \x03(\x05\x12%\n\x0evertex_normals\x18\x05 \x03(\x0b\x32\r.brax.Vector3\x12#\n\x0c\x66\x61\x63\x65_normals\x18\x06 \x03(\x0b\x32\r.brax.Vector3\"\xcf\x05\n\x06\x43onfig\x12\x1a\n\x06\x62odies\x18\x01 \x03(\x0b\x32\n.brax.Body\x12\x1b\n\x06joints\x18\x02 \x03(\x0b\x32\x0b.brax.Joint\x12!\n\tactuators\x18\x03 \x03(\x0b\x32\x0e.brax.Actuator\x12\x1b\n\x06\x66orces\x18\x10 \x03(\x0b\x32\x0b.brax.Force\x12\x12\n\nelasticity\x18\x04 \x01(\x02\x12\x10\n\x08\x66riction\x18\x05 \x01(\x02\x12\x1e\n\x07gravity\x18\x06 \x01(\x0b\x32\r.brax.Vector3\x12\x18\n\x10velocity_damping\x18\x07 \x01(\x02\x12\x17\n\x0f\x61ngular_damping\x18\x08 \x01(\x02\x12\x15\n\rbaumgarte_erp\x18\t \x01(\x02\x12.\n\x0f\x63ollide_include\x18\n \x03(\x0b\x32\x15.brax.Config.NamePair\x12\n\n\x02\x64t\x18\x0b \x01(\x02\x12\x10\n\x08substeps\x18\x0c \x01(\x05\x12\x1c\n\x06\x66rozen\x18\r \x01(\x0b\x32\x0c.brax.Frozen\x12$\n\x08\x64\x65\x66\x61ults\x18\x0e \x03(\x0b\x32\x12.brax.DefaultState\x12\x17\n\x0f\x63ollider_cutoff\x18\x0f \x01(\x05\x12+\n\x0fmesh_geometries\x18\x11 \x03(\x0b\x32\x12.brax.MeshGeometry\x12\x15\n\rdynamics_mode\x18\x12 \x01(\t\x12\x1d\n\x10solver_scale_pos\x18\x13 \x01(\x02H\x00\x88\x01\x01\x12\x1d\n\x10solver_scale_ang\x18\x14 \x01(\x02H\x01\x88\x01\x01\x12!\n\x14solver_scale_collide\x18\x15 \x01(\x02H\x02\x88\x01\x01\x1a)\n\x08NamePair\x12\r\n\x05\x66irst\x18\x01 \x01(\t\x12\x0e\n\x06second\x18\x02 \x01(\tB\x13\n\x11_solver_scale_posB\x13\n\x11_solver_scale_angB\x17\n\x15_solver_scale_collideb\x06proto3')



_VECTOR3 = DESCRIPTOR.message_types_by_name['Vector3']
_FROZEN = DESCRIPTOR.message_types_by_name['Frozen']
_BODY = DESCRIPTOR.message_types_by_name['Body']
_COLLIDER = DESCRIPTOR.message_types_by_name['Collider']
_COLLIDER_MATERIAL = _COLLIDER.nested_types_by_name['Material']
_COLLIDER_BOX = _COLLIDER.nested_types_by_name['Box']
_COLLIDER_PLANE = _COLLIDER.nested_types_by_name['Plane']
_COLLIDER_CLIPPEDPLANE = _COLLIDER.nested_types_by_name['ClippedPlane']
_COLLIDER_SPHERE = _COLLIDER.nested_types_by_name['Sphere']
_COLLIDER_CAPSULE = _COLLIDER.nested_types_by_name['Capsule']
_COLLIDER_HEIGHTMAP = _COLLIDER.nested_types_by_name['HeightMap']
_COLLIDER_MESH = _COLLIDER.nested_types_by_name['Mesh']
_JOINT = DESCRIPTOR.message_types_by_name['Joint']
_JOINT_RANGE = _JOINT.nested_types_by_name['Range']
_ACTUATOR = DESCRIPTOR.message_types_by_name['Actuator']
_ACTUATOR_TORQUE = _ACTUATOR.nested_types_by_name['Torque']
_ACTUATOR_ANGLE = _ACTUATOR.nested_types_by_name['Angle']
_FORCE = DESCRIPTOR.message_types_by_name['Force']
_FORCE_THRUSTER = _FORCE.nested_types_by_name['Thruster']
_FORCE_TWISTER = _FORCE.nested_types_by_name['Twister']
_DEFAULTSTATE = DESCRIPTOR.message_types_by_name['DefaultState']
_DEFAULTSTATE_JOINTANGLE = _DEFAULTSTATE.nested_types_by_name['JointAngle']
_DEFAULTSTATE_QP = _DEFAULTSTATE.nested_types_by_name['QP']
_MESHGEOMETRY = DESCRIPTOR.message_types_by_name['MeshGeometry']
_CONFIG = DESCRIPTOR.message_types_by_name['Config']
_CONFIG_NAMEPAIR = _CONFIG.nested_types_by_name['NamePair']
Vector3 = _reflection.GeneratedProtocolMessageType('Vector3', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR3,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Vector3)
  })
_sym_db.RegisterMessage(Vector3)

Frozen = _reflection.GeneratedProtocolMessageType('Frozen', (_message.Message,), {
  'DESCRIPTOR' : _FROZEN,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Frozen)
  })
_sym_db.RegisterMessage(Frozen)

Body = _reflection.GeneratedProtocolMessageType('Body', (_message.Message,), {
  'DESCRIPTOR' : _BODY,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Body)
  })
_sym_db.RegisterMessage(Body)

Collider = _reflection.GeneratedProtocolMessageType('Collider', (_message.Message,), {

  'Material' : _reflection.GeneratedProtocolMessageType('Material', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_MATERIAL,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.Material)
    })
  ,

  'Box' : _reflection.GeneratedProtocolMessageType('Box', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_BOX,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.Box)
    })
  ,

  'Plane' : _reflection.GeneratedProtocolMessageType('Plane', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_PLANE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.Plane)
    })
  ,

  'ClippedPlane' : _reflection.GeneratedProtocolMessageType('ClippedPlane', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_CLIPPEDPLANE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.ClippedPlane)
    })
  ,

  'Sphere' : _reflection.GeneratedProtocolMessageType('Sphere', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_SPHERE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.Sphere)
    })
  ,

  'Capsule' : _reflection.GeneratedProtocolMessageType('Capsule', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_CAPSULE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.Capsule)
    })
  ,

  'HeightMap' : _reflection.GeneratedProtocolMessageType('HeightMap', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_HEIGHTMAP,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.HeightMap)
    })
  ,

  'Mesh' : _reflection.GeneratedProtocolMessageType('Mesh', (_message.Message,), {
    'DESCRIPTOR' : _COLLIDER_MESH,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Collider.Mesh)
    })
  ,
  'DESCRIPTOR' : _COLLIDER,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Collider)
  })
_sym_db.RegisterMessage(Collider)
_sym_db.RegisterMessage(Collider.Material)
_sym_db.RegisterMessage(Collider.Box)
_sym_db.RegisterMessage(Collider.Plane)
_sym_db.RegisterMessage(Collider.ClippedPlane)
_sym_db.RegisterMessage(Collider.Sphere)
_sym_db.RegisterMessage(Collider.Capsule)
_sym_db.RegisterMessage(Collider.HeightMap)
_sym_db.RegisterMessage(Collider.Mesh)

Joint = _reflection.GeneratedProtocolMessageType('Joint', (_message.Message,), {

  'Range' : _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), {
    'DESCRIPTOR' : _JOINT_RANGE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Joint.Range)
    })
  ,
  'DESCRIPTOR' : _JOINT,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Joint)
  })
_sym_db.RegisterMessage(Joint)
_sym_db.RegisterMessage(Joint.Range)

Actuator = _reflection.GeneratedProtocolMessageType('Actuator', (_message.Message,), {

  'Torque' : _reflection.GeneratedProtocolMessageType('Torque', (_message.Message,), {
    'DESCRIPTOR' : _ACTUATOR_TORQUE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Actuator.Torque)
    })
  ,

  'Angle' : _reflection.GeneratedProtocolMessageType('Angle', (_message.Message,), {
    'DESCRIPTOR' : _ACTUATOR_ANGLE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Actuator.Angle)
    })
  ,
  'DESCRIPTOR' : _ACTUATOR,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Actuator)
  })
_sym_db.RegisterMessage(Actuator)
_sym_db.RegisterMessage(Actuator.Torque)
_sym_db.RegisterMessage(Actuator.Angle)

Force = _reflection.GeneratedProtocolMessageType('Force', (_message.Message,), {

  'Thruster' : _reflection.GeneratedProtocolMessageType('Thruster', (_message.Message,), {
    'DESCRIPTOR' : _FORCE_THRUSTER,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Force.Thruster)
    })
  ,

  'Twister' : _reflection.GeneratedProtocolMessageType('Twister', (_message.Message,), {
    'DESCRIPTOR' : _FORCE_TWISTER,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Force.Twister)
    })
  ,
  'DESCRIPTOR' : _FORCE,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Force)
  })
_sym_db.RegisterMessage(Force)
_sym_db.RegisterMessage(Force.Thruster)
_sym_db.RegisterMessage(Force.Twister)

DefaultState = _reflection.GeneratedProtocolMessageType('DefaultState', (_message.Message,), {

  'JointAngle' : _reflection.GeneratedProtocolMessageType('JointAngle', (_message.Message,), {
    'DESCRIPTOR' : _DEFAULTSTATE_JOINTANGLE,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.DefaultState.JointAngle)
    })
  ,

  'QP' : _reflection.GeneratedProtocolMessageType('QP', (_message.Message,), {
    'DESCRIPTOR' : _DEFAULTSTATE_QP,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.DefaultState.QP)
    })
  ,
  'DESCRIPTOR' : _DEFAULTSTATE,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.DefaultState)
  })
_sym_db.RegisterMessage(DefaultState)
_sym_db.RegisterMessage(DefaultState.JointAngle)
_sym_db.RegisterMessage(DefaultState.QP)

MeshGeometry = _reflection.GeneratedProtocolMessageType('MeshGeometry', (_message.Message,), {
  'DESCRIPTOR' : _MESHGEOMETRY,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.MeshGeometry)
  })
_sym_db.RegisterMessage(MeshGeometry)

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {

  'NamePair' : _reflection.GeneratedProtocolMessageType('NamePair', (_message.Message,), {
    'DESCRIPTOR' : _CONFIG_NAMEPAIR,
    '__module__' : 'brax.physics.config_pb2'
    # @@protoc_insertion_point(class_scope:brax.Config.NamePair)
    })
  ,
  'DESCRIPTOR' : _CONFIG,
  '__module__' : 'brax.physics.config_pb2'
  # @@protoc_insertion_point(class_scope:brax.Config)
  })
_sym_db.RegisterMessage(Config)
_sym_db.RegisterMessage(Config.NamePair)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _VECTOR3._serialized_start=35
  _VECTOR3._serialized_end=77
  _FROZEN._serialized_start=79
  _FROZEN._serialized_end=166
  _BODY._serialized_start=169
  _BODY._serialized_end=300
  _COLLIDER._serialized_start=303
  _COLLIDER._serialized_end=1092
  _COLLIDER_MATERIAL._serialized_start=771
  _COLLIDER_MATERIAL._serialized_end=819
  _COLLIDER_BOX._serialized_start=821
  _COLLIDER_BOX._serialized_end=859
  _COLLIDER_PLANE._serialized_start=861
  _COLLIDER_PLANE._serialized_end=868
  _COLLIDER_CLIPPEDPLANE._serialized_start=870
  _COLLIDER_CLIPPEDPLANE._serialized_end=924
  _COLLIDER_SPHERE._serialized_start=926
  _COLLIDER_SPHERE._serialized_end=950
  _COLLIDER_CAPSULE._serialized_start=952
  _COLLIDER_CAPSULE._serialized_end=1006
  _COLLIDER_HEIGHTMAP._serialized_start=1008
  _COLLIDER_HEIGHTMAP._serialized_end=1047
  _COLLIDER_MESH._serialized_start=1049
  _COLLIDER_MESH._serialized_end=1084
  _JOINT._serialized_start=1095
  _JOINT._serialized_end=1513
  _JOINT_RANGE._serialized_start=1442
  _JOINT_RANGE._serialized_end=1475
  _ACTUATOR._serialized_start=1516
  _ACTUATOR._serialized_end=1680
  _ACTUATOR_TORQUE._serialized_start=1655
  _ACTUATOR_TORQUE._serialized_end=1663
  _ACTUATOR_ANGLE._serialized_start=1665
  _ACTUATOR_ANGLE._serialized_end=1672
  _FORCE._serialized_start=1683
  _FORCE._serialized_end=1849
  _FORCE_THRUSTER._serialized_start=1820
  _FORCE_THRUSTER._serialized_end=1830
  _FORCE_TWISTER._serialized_start=1832
  _FORCE_TWISTER._serialized_end=1841
  _DEFAULTSTATE._serialized_start=1852
  _DEFAULTSTATE._serialized_end=2140
  _DEFAULTSTATE_JOINTANGLE._serialized_start=1951
  _DEFAULTSTATE_JOINTANGLE._serialized_end=2007
  _DEFAULTSTATE_QP._serialized_start=2010
  _DEFAULTSTATE_QP._serialized_end=2140
  _MESHGEOMETRY._serialized_start=2143
  _MESHGEOMETRY._serialized_end=2309
  _CONFIG._serialized_start=2312
  _CONFIG._serialized_end=3031
  _CONFIG_NAMEPAIR._serialized_start=2923
  _CONFIG_NAMEPAIR._serialized_end=2964
# @@protoc_insertion_point(module_scope)
